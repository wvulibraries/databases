// Utility Vars
$easeOutExpo:cubic-bezier(0.19, 1, 0.22, 1); /* easeOutExpo */
$easeInOutExpo:cubic-bezier(1.000, 0.000, 0.000, 1.000); /* easeInOutExpo */

// transitions
@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

// generic transform
@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}

// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}
 
// scale
@mixin scale($scale) {
   @include transform(scale($scale));
} 
// translate
@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}

// clearfix
@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin breakpoint($break) {
	@if $break == phone { 
		@media (min-width: 30em) { @content; }
	} @else if $break == tablet {
        @media (min-width: 48em) { @content; }
  } @else if $break == laptop {
        @media (min-width: 60em) { @content; }
  } @else if $break == desktop {
        @media (min-width: 80em) { @content; }
  } @else { 
    	@media (min-width: $break) { @content; }
  }
}