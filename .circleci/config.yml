version: 2.1

jobs:
  build:
    working_directory: ~/circleci-databases/databases
    docker:
      - image: cimg/ruby:3.3.4-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          RAILS_ENV: test
          CC_TEST_REPORTER_ID: 28c11d4cad0e4d8aa4796ce66a8e080700ef62945e2b4aeb62b1f6a12b458c6d
          COVERAGE: true
      - image: cimg/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: circleci
      - image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
        environment:
          cluster.name: elasticsearch
          xpack.security.enabled: false
          transport.host: localhost
          network.host: 127.0.0.1
          http.port: 9200
          discovery.type: single-node            
    steps:
      - checkout:
          path: ~/circleci-databases

      - run:
          name: Configure secrets.yml
          command: mv ~/circleci-databases/databases/config/secrets.ci.yml ~/circleci-databases/databases/config/secrets.yml

      - run:
          name: Configure database.yml
          command: mv ~/circleci-databases/databases/config/database.ci.yml ~/circleci-databases/databases/config/database.yml

      - run:
          name: Configure application.yml
          command: mv ~/circleci-databases/databases/config/application.ci.yml ~/circleci-databases/databases/config/application.yml  

      # - restore_cache:
      #     keys:
      #       - gem-cache-{{ checksum "~/circleci-databases/databases/Gemfile.lock" }}
      #       - gem-cache-

      - run:
          name: Install Bundler
          command: |
            cd ~/circleci-databases/databases
            gem install bundler -v $(tail -n 1 Gemfile.lock)
            bundle install --jobs=4 --retry=3

      # - restore_cache:
      #     keys:
      #       - yarn-{{ checksum "~/circleci-databases/databases/yarn.lock" }}
      #       - yarn-

      - run:
          name: Verify Yarn Installation Path
          command: ls -la node_modules

      - run:
          name: Manually Install Turbolinks
          command: yarn add turbolinks

      - run:
          name: Verify Turbolinks Installation
          command: |
            if [ ! -d "node_modules/turbolinks" ]; then
              echo "Turbolinks not found!"
              exit 1
            fi

      # - run:
      #     name: Install Yarn
      #     command: |
      #       cd ~/circleci-databases/databases
      #       yarn install --frozen-lockfile

      # - save_cache:
      #     paths:
      #       - ~/.cache/yarn
      #     key: yarn-{{ checksum "~/circleci-databases/databases/yarn.lock" }}

      - run:
          name: Wait for MySQL
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m

      - run:
          name: Load DB schema
          command: |
            bin/rails db:schema:load --trace

      # - run:
      #     name: Install Yarn
      #     command: |
      #       yarn install

      # - run:
      #     name: Manually Install Turbolinks
      #     command: yarn add turbolinks

      # - run:
      #     name: Verify Turbolinks Installation
      #     command: |
      #       if [ ! -d "node_modules/turbolinks" ]; then
      #         echo "Turbolinks not found!"
      #         exit 1
      #       fi

      # - run: install package.json dependencies
      #     name: Install Yarn
      #     command: yarn install

      - run:
          name: Precompile assets
          command: |
            RAILS_ENV=test bundle exec rake assets:precompile

      - run:
          name: Setup Code Climate Test Reporter
          command: |
            cd databases
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter

      - run:
          name: Run RSpec
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out /tmp/test-results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
          when: always

      - store_test_results:
          path: ~/circleci-databases/databases/tmp/test-results

      - store_artifacts:
          path: ~/circleci-databases/databases/tmp/test-results
          destination: test-results

      - run:
          name: Upload coverage results to Code Climate
          command: |
            cd databases
            ./tmp/cc-test-reporter format-coverage -t simplecov $CIRCLE_ARTIFACTS/coverage/.resultset.json
            ./tmp/cc-test-reporter upload-coverage