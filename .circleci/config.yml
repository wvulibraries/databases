version: 2
jobs:
  build:
    working_directory: ~/circleci-databases/databases
    parallelism: 4
    shell: /bin/bash --login
    environment:
      RAILS_ENV: test
      RACK_ENV: test
      COVERAGE: true
      TZ: /usr/share/zoneinfo/America/NewYork
    docker:
      - image: cimg/ruby:3.3.4-browsers
        environment:
          RAILS_ENV: test
          CC_TEST_REPORTER_ID: 28c11d4cad0e4d8aa4796ce66a8e080700ef62945e2b4aeb62b1f6a12b458c6d
          COVERAGE: true  
      - image: cimg/mysql:8.0
        environment:
          MYSQL_ROOT_HOST: 127.0.0.1
          MYSQL_ROOT_PASSWORD: circleci   
      - image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3    
        environment:
          - transport.host: localhost
          - network.host: 0.0.0.0
          - http.port: 9200             
          - discovery.type: single-node                          
    steps:    
      - checkout:
          path: ~/circleci-databases/databases

      # Optional: debug to confirm file locations
      - run:
          name: Debug: Check Gemfile.lock
          command: |
            echo "Looking for Gemfile.lock..."
            find . -name Gemfile.lock
            ls -lah

      - run:
          name: Configure secrets.yml
          command: mv config/secrets.ci.yml config/secrets.yml
      - run:
          name: Configure database.yml
          command: mv config/database.ci.yml config/database.yml
      - run:
          name: Configure application.yml
          command: mv config/application.ci.yml config/application.yml        
      - run:
          name: apt update
          command: sudo apt update
      - run:
          name: Install Node 18
          command: |
            curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs

      # Restore bundle cache
      - restore_cache:
          keys:
            - databases-bundle-
            - databases-bundle-{{ checksum "Gemfile.lock" }}

      - run:
          name: install dockerize
          command: |
            wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1

      - run:
          name: Force Bundler Version
          command: |
            sudo gem update --system
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - run:
          name: bundle gems
          command: bundle install --path vendor/bundle

      - run:
          name: Install Code Climate Test Reporter
          command: |
