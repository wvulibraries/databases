version: 2.1
jobs:
  build:
    working_directory: ~/circleci-databases

    # Primary container image where all commands run

    docker:
      - image: cimg/ruby:3.3.4-node
        environment:
          RAILS_ENV: test
          CC_TEST_REPORTER_ID: 28c11d4cad0e4d8aa4796ce66a8e080700ef62945e2b4aeb62b1f6a12b458c6d
          COVERAGE: true  
          ELASTIC_URL: 0.0.0.0:9200
          ELASTIC_USERNAME: elastic
          ELASTIC_PASSWORD: password

    # Service container image available at `host: localhost`

      - image: cimg/mysql:8.0
        environment:
          MYSQL_ROOT_HOST: 127.0.0.1
          MYSQL_ROOT_PASSWORD: circleci

      - image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3  
        environment:
           transport.host: localhost
           network.host: 0.0.0.0
           http.port: 9200             
           discovery.type: single-node   
           ELASTIC_USERNAME: elastic
           ELASTIC_PASSWORD: password
           xpack.security.enabled: true

    steps:
      - checkout

      - run:
          name: Configure secrets.yml
          command: mv config/secrets.ci.yml config/secrets.yml

      - run:
          name: Configure database.yml
          command: mv config/database.ci.yml config/database.yml

      - run:
          name: Configure application.yml
          command: mv config/application.ci.yml config/application.yml     

      # Restore bundle cache
      - restore_cache:
          keys:
            - databases-{{ checksum "Gemfile.lock" }}
            - databases-

      # Bundle install dependencies
      - run:
          name: Install dependencies
          command: |
            bundle config set path 'vendor/bundle'
            bundle install --jobs=4 --retry=3

      # - run: sudo apt install -y postgresql-client || true

      # Store bundle cache
      - save_cache:
          key: databases-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Setup Database
          command: |
            bundle exec rake db:create db:schema:load

      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: Run tests
          command: |
            mkdir -p test-results/rspec test-artifacts
            ./cc-test-reporter before-build
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec --profile 10 \
                              --color \
                              --order random \
                              --out test-results/rspec/rspec.xml \
                              --format progress \
                              -- ${TESTFILES}

      - run:
          name: Code Climate Test Coverage
          command: |
            ./cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json"

      - persist_to_workspace:
          root: coverage
          paths:
            - codeclimate.*.json

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-artifacts