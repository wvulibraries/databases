version: 2.1

executors:
  default:
    working_directory: ~/circleci-databases/databases
    docker:
      - image: cimg/ruby:3.3.4
        environment:
          RAILS_ENV: test
          CC_TEST_REPORTER_ID: 28c11d4cad0e4d8aa4796ce66a8e080700ef62945e2b4aeb62b1f6a12b458c6d
          COVERAGE: true 
          ELASTIC_URL: localhost:9200
          ELASTIC_USERNAME: elastic
          ELASTIC_PASSWORD: password 
      - image: cimg/mysql:8.0
        environment:
          MYSQL_ROOT_HOST: 127.0.0.1
          MYSQL_ROOT_PASSWORD: circleci   
      - image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
        environment:
          - transport.host: localhost
          - network.host: 0.0.0.0
          - http.port: 9200             
          - discovery.type: single-node 

commands:
  configure_bundler:
    description: Configure bundler
    steps:
      - run:
          name: Configure bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

jobs:
  build:
    executor: default
    steps:
      - checkout
      - restore_cache:
          keys:
            - databases-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - databases-
      - configure_bundler
      - run:
          name: Install bundle
          command: bundle install
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m
      - run:
          name: Setup DB
          command: bundle exec rails db:create db:schema:load --trace
      - save_cache:
          key: databases-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - persist_to_workspace:
          root: ~/
          paths:
            - ./databases

workflows:
  version: 2
  integration:
    jobs:
      - build
